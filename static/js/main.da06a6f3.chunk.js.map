{"version":3,"sources":["components/Feedback/Statistic.js","components/Feedback/Notification.js","components/Feedback/OptionItem.js","components/Feedback/Options.js","components/Feedback/Section.js","components/Feedback/Feedback.js","App.js","index.js","components/Feedback/Feedback.module.css"],"names":["Statistic","feedbackPercentage","count","props","good","totalFeedback","console","log","Math","round","className","styles","statistic_title","statistic","this","neutral","bad","voiting_percent","Component","Notification","section","message","defaultProps","OptionItem","button","value","onClick","onLeaveFeedback","label","key","FEEDBACK_BUTTON","id","Options","StyleSheet","options","map","title","Section","Feedback","state","handleVoiting","event","target","setState","prevState","countTotalFeedback","feedbackBlock","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.da06a6f3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Feedback.module.css\";\n\nclass Statistic extends Component {\n  feedbackPercentage = () => {\n    const count = (this.props.good * 100) / this.props.totalFeedback;\n    console.log(\"Statistic ~ good: \", this.props.good);\n    console.log(\"Statistic ~ totalFeedback: \", this.props.totalFeedback);\n    console.log(\"Statistic ~ count: \", count);\n\n    return Math.round(count);\n  };\n\n  render() {\n    return (\n      <div>\n        <h3 className={styles.statistic_title}>Statistic</h3>\n\n        <table className={styles.statistic}>\n          <tr>\n            <td>Good</td>\n            <td>{this.props.good}</td>\n          </tr>\n          <tr>\n            <td>Neutral</td>\n            <td>{this.props.neutral}</td>\n          </tr>\n          <tr>\n            <td>Bad</td>\n            <td>{this.props.bad}</td>\n          </tr>\n          <tr>\n            <td>Total</td>\n            <td>{this.props.totalFeedback}</td>\n          </tr>\n        </table>\n\n        <p className={styles.voiting_percent}>\n          Positive feedback: {this.feedbackPercentage()} %\n        </p>\n      </div>\n    );\n  }\n}\n\nStatistic.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  totalFeedback: PropTypes.number.isRequired,\n};\n\nexport default Statistic;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Feedback.module.css\";\n\nclass Notification extends Component {\n  render() {\n    return (\n      <div className={styles.section}>\n        <h3>{this.props.message}</h3>\n      </div>\n    );\n  }\n}\n\nNotification.defaultProps = {\n  message: \"No feedback given\",\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Feedback.module.css\";\n\nclass OptionItem extends Component {\n  render() {\n    return (\n      <button\n        className={styles.button}\n        key={this.props.key}\n        value={this.props.value}\n        onClick={this.props.onLeaveFeedback}\n      >\n        {this.props.label}\n      </button>\n    );\n  }\n}\n\nOptionItem.defaultProps = {\n  label: \"Button\",\n};\n\nOptionItem.propTypes = {\n  label: PropTypes.string,\n  key: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nexport default OptionItem;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport OptionItem from \"./OptionItem\";\n\nconst FEEDBACK_BUTTON = [\n  { id: 1, label: \"Good\", value: \"good\" },\n  { id: 2, label: \"Neutral\", value: \"neutral\" },\n  { id: 3, label: \"Bad\", value: \"bad\" },\n];\n\nclass Options extends Component {\n  render() {\n    return (\n      <div className={StyleSheet.options}>\n        {FEEDBACK_BUTTON.map(({ id, label, value }) => (\n          <OptionItem\n            key={id}\n            label={label}\n            value={value}\n            onLeaveFeedback={this.props.onLeaveFeedback}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nOptions.defaultProps = {\n  title: \"Please leave feedback\",\n};\n\nOptions.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nexport default Options;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Options from \"./Options\";\nimport styles from \"./Feedback.module.css\";\n\nclass Section extends Component {\n  render() {\n    return (\n      <div className={styles.section}>\n        <h2>{this.props.title}</h2>\n        <Options onLeaveFeedback={this.props.onLeaveFeedback} />\n      </div>\n    );\n  }\n}\n\nSection.defaultProps = {\n  title: \"Please leave feedback\",\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React, { Component } from \"react\";\n\nimport Statistic from \"./Statistic\";\nimport Notification from \"./Notification\";\nimport Section from \"./Section\";\nimport styles from \"./Feedback.module.css\";\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    totalFeedback: 0,\n  };\n\n  handleVoiting = (event) => {\n    console.log(\"click: \", event.target.value);\n\n    if (event.target.value === \"good\") {\n      this.setState((prevState) => ({\n        good: prevState.good + 1,\n      }));\n      console.log(\"Feedback ~ this.setState ~ good === \", this.state.good);\n    }\n\n    if (event.target.value === \"neutral\") {\n      this.setState((prevState) => ({\n        neutral: prevState.neutral + 1,\n      }));\n    }\n\n    if (event.target.value === \"bad\") {\n      this.setState((prevState) => ({\n        bad: prevState.bad + 1,\n      }));\n    }\n\n    this.countTotalFeedback();\n  };\n\n  countTotalFeedback = () => {\n    this.setState((prevState) => ({\n      totalFeedback: prevState.totalFeedback + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad, totalFeedback } = this.state;\n\n    return (\n      <div className={styles.feedbackBlock}>\n        <Section\n          title=\"Please leave feedback\"\n          onLeaveFeedback={this.handleVoiting}\n        />\n\n        {totalFeedback ? (\n          <Statistic\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            totalFeedback={totalFeedback}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","import React, { Component } from \"react\";\nimport Feedback from \"./components/Feedback\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Feedback />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBlock\":\"Feedback_feedbackBlock__1UDLj\",\"section\":\"Feedback_section__13Ibw\",\"statistic\":\"Feedback_statistic__2pE11\",\"statistic_title\":\"Feedback_statistic_title__3MF6L\",\"button\":\"Feedback_button__1E_-H\",\"voiting_percent\":\"Feedback_voiting_percent__1MZHE\",\"options\":\"Feedback_options__1hX7O\"};"],"sourceRoot":""}